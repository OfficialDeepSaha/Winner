# Generated by Django 5.2.4 on 2025-07-06 16:26

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('description', models.TextField(blank=True, null=True)),
                ('usage_frequency', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['-usage_frequency', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#6B7280', max_length=7)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ContextEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('source_type', models.CharField(choices=[('whatsapp', 'WhatsApp'), ('email', 'Email'), ('notes', 'Notes'), ('calendar', 'Calendar'), ('other', 'Other')], max_length=20)),
                ('source_details', models.JSONField(blank=True, null=True)),
                ('processed_insights', models.TextField(blank=True, null=True)),
                ('extracted_tasks', models.JSONField(blank=True, null=True)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('urgency_indicators', models.JSONField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('content_date', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Context entries',
                'ordering': ['-content_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('original_description', models.TextField(blank=True, null=True)),
                ('enhanced_description', models.TextField(blank=True, null=True)),
                ('ai_priority_score', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('ai_suggested_deadline', models.DateTimeField(blank=True, null=True)),
                ('ai_reasoning', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=15)),
                ('deadline', models.DateTimeField(blank=True, null=True)),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('context_processed', models.BooleanField(default=False)),
                ('last_ai_analysis', models.DateTimeField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tasks.category')),
                ('tags', models.ManyToManyField(blank=True, to='tasks.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-ai_priority_score', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskContextRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relevance_score', models.FloatField(help_text='AI-calculated relevance score between 0 and 1', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('context_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_relations', to='tasks.contextentry')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='context_relations', to='tasks.task')),
            ],
            options={
                'ordering': ['-relevance_score'],
            },
        ),
        migrations.CreateModel(
            name='AIAnalysisLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_type', models.CharField(max_length=50)),
                ('input_data', models.JSONField()),
                ('output_data', models.JSONField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('success', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'analysis_type'], name='tasks_aiana_user_id_b71893_idx'), models.Index(fields=['success'], name='tasks_aiana_success_777f87_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['user', 'source_type'], name='tasks_conte_user_id_e989c5_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['is_processed'], name='tasks_conte_is_proc_820594_idx'),
        ),
        migrations.AddIndex(
            model_name='contextentry',
            index=models.Index(fields=['content_date'], name='tasks_conte_content_0ee4f4_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'status'], name='tasks_task_user_id_c0fce1_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['ai_priority_score'], name='tasks_task_ai_prio_4ee7b0_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['deadline'], name='tasks_task_deadlin_736196_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='taskcontextrelation',
            unique_together={('task', 'context_entry')},
        ),
    ]
